import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var RogerRadioPlayer = /** @class */ (function (_super) {
    __extends(RogerRadioPlayer, _super);
    function RogerRadioPlayer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RogerRadioPlayer.prototype.setCallbackStopped = function (callback) { return cordova(this, "setCallbackStopped", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.setCallbackTasksEnable = function (callback) { return cordova(this, "setCallbackTasksEnable", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.setCallbackTasksDisable = function (callback) { return cordova(this, "setCallbackTasksDisable", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.clearCachedStreamUrl = function () { return cordova(this, "clearCachedStreamUrl", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.playerLoad = function (url) { return cordova(this, "playerLoad", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.playerReload = function () { return cordova(this, "playerReload", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.playerPlay = function () { return cordova(this, "playerPlay", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.playerStop = function () { return cordova(this, "playerStop", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.playerSetVolume = function (vol) { return cordova(this, "playerSetVolume", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.playerUnmute = function () { return cordova(this, "playerUnmute", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.playerMute = function () { return cordova(this, "playerMute", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.playerExit = function () { return cordova(this, "playerExit", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.updateMetadata = function (artist, title) { return cordova(this, "updateMetadata", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.controlsDestroy = function () { return cordova(this, "controlsDestroy", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.controlsSubscribe = function () { return cordova(this, "controlsSubscribe", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.controlsCreate = function () { return cordova(this, "controlsCreate", { "sync": true }, arguments); };
    RogerRadioPlayer.pluginName = "RogerRadioPlayer";
    RogerRadioPlayer.plugin = "cordova-plugin-roger-radio-player";
    RogerRadioPlayer.pluginRef = "cordova.plugins.rogerRadioPlayer";
    RogerRadioPlayer.repo = "https://github.com/TheHolyRogerCoin/RogerRadioApp";
    RogerRadioPlayer.platforms = ["Android"];
    RogerRadioPlayer.decorators = [
        { type: Injectable }
    ];
    return RogerRadioPlayer;
}(IonicNativePlugin));
export { RogerRadioPlayer };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL3JvZ2VyLXJhZGlvLXBsYXllci9uZ3gvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyw4QkFBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUEwQmxDLG9DQUFpQjs7OztJQVdyRCw2Q0FBa0IsYUFBQyxRQUFrQztJQVlyRCxpREFBc0IsYUFBQyxRQUFrQztJQVl6RCxrREFBdUIsYUFBQyxRQUFrQztJQVUxRCwrQ0FBb0I7SUFZcEIscUNBQVUsYUFBQyxHQUFXO0lBVXRCLHVDQUFZO0lBVVoscUNBQVU7SUFVVixxQ0FBVTtJQVlWLDBDQUFlLGFBQUMsR0FBVztJQVUzQix1Q0FBWTtJQVVaLHFDQUFVO0lBVVYscUNBQVU7SUFhVix5Q0FBYyxhQUFDLE1BQWMsRUFBRSxLQUFhO0lBVTVDLDBDQUFlO0lBVWYsNENBQWlCO0lBVWpCLHlDQUFjOzs7Ozs7O2dCQTdLZixVQUFVOzsyQkExQlg7RUEyQnNDLGlCQUFpQjtTQUExQyxnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuLyoqXG4gKiBAbmFtZSBSb2dlclJhZGlvUGxheWVyXG4gKiBAZGVzY3JpcHRpb25cbiAqIENvcmRvdmEgcGx1Z2luIGZvciBSb2dlclJhZGlvIFBsYXllci5cbiAqIFJlcXVpcmVzIENvcmRvdmEgcGx1Z2luOiBjb3Jkb3ZhLXBsdWdpbi1yb2dlci1yYWRpby1wbGF5ZXIuXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IFJvZ2VyUmFkaW9QbGF5ZXIgfSBmcm9tICdAaW9uaWMtbmF0aXZlL3JvZ2VyLXJhZGlvLXBsYXllci9uZ3gnO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgcm9nZXJSYWRpb1BsYXllcjogUm9nZXJSYWRpb1BsYXllcikgeyB9XG4gKlxuICogLi4uXG4gKlxuICogYGBgXG4gKlxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ1JvZ2VyUmFkaW9QbGF5ZXInLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1yb2dlci1yYWRpby1wbGF5ZXInLFxuICBwbHVnaW5SZWY6ICdjb3Jkb3ZhLnBsdWdpbnMucm9nZXJSYWRpb1BsYXllcicsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vVGhlSG9seVJvZ2VyQ29pbi9Sb2dlclJhZGlvQXBwJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnXSxcbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUm9nZXJSYWRpb1BsYXllciBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcbiAgLyoqXG4gICAqIHNldENhbGxiYWNrU3RvcHBlZFxuICAgKlxuICAgKiBAcGFyYW0gY2FsbGJhY2sge2Z1bmN0aW9ufVxuICAgKlxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN5bmM6IHRydWUsXG4gIH0pXG4gIHNldENhbGxiYWNrU3RvcHBlZChjYWxsYmFjazogKC4uLmFyZ3M6IGFueVtdKSA9PiB2b2lkKTogdm9pZCB7fVxuXG4gIC8qKlxuICAgKiBzZXRDYWxsYmFja1Rhc2tzRW5hYmxlXG4gICAqXG4gICAqIEBwYXJhbSBjYWxsYmFjayB7ZnVuY3Rpb259XG4gICAqXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3luYzogdHJ1ZSxcbiAgfSlcbiAgc2V0Q2FsbGJhY2tUYXNrc0VuYWJsZShjYWxsYmFjazogKC4uLmFyZ3M6IGFueVtdKSA9PiB2b2lkKTogdm9pZCB7fVxuXG4gIC8qKlxuICAgKiBzZXRDYWxsYmFja1Rhc2tzRGlzYWJsZVxuICAgKlxuICAgKiBAcGFyYW0gY2FsbGJhY2sge2Z1bmN0aW9ufVxuICAgKlxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN5bmM6IHRydWUsXG4gIH0pXG4gIHNldENhbGxiYWNrVGFza3NEaXNhYmxlKGNhbGxiYWNrOiAoLi4uYXJnczogYW55W10pID0+IHZvaWQpOiB2b2lkIHt9XG5cbiAgLyoqXG4gICAqIGNsZWFyQ2FjaGVkU3RyZWFtVXJsXG4gICAqXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3luYzogdHJ1ZSxcbiAgfSlcbiAgY2xlYXJDYWNoZWRTdHJlYW1VcmwoKTogdm9pZCB7fVxuXG4gIC8qKlxuICAgKiBwbGF5ZXJMb2FkXG4gICAqXG4gICAqIEBwYXJhbSB1cmwge3N0cmluZ31cbiAgICpcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBzeW5jOiB0cnVlLFxuICB9KVxuICBwbGF5ZXJMb2FkKHVybDogc3RyaW5nKTogdm9pZCB7fVxuXG4gIC8qKlxuICAgKiBwbGF5ZXJSZWxvYWRcbiAgICpcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBzeW5jOiB0cnVlLFxuICB9KVxuICBwbGF5ZXJSZWxvYWQoKTogdm9pZCB7fVxuXG4gIC8qKlxuICAgKiBwbGF5ZXJQbGF5XG4gICAqXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3luYzogdHJ1ZSxcbiAgfSlcbiAgcGxheWVyUGxheSgpOiB2b2lkIHt9XG5cbiAgLyoqXG4gICAqIHBsYXllclN0b3BcbiAgICpcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBzeW5jOiB0cnVlLFxuICB9KVxuICBwbGF5ZXJTdG9wKCk6IHZvaWQge31cblxuICAvKipcbiAgICogcGxheWVyU2V0Vm9sdW1lXG4gICAqXG4gICAqIEBwYXJhbSB2b2wge251bWJlcn1cbiAgICpcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBzeW5jOiB0cnVlLFxuICB9KVxuICBwbGF5ZXJTZXRWb2x1bWUodm9sOiBudW1iZXIpOiB2b2lkIHt9XG5cbiAgLyoqXG4gICAqIHBsYXllclVubXV0ZVxuICAgKlxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN5bmM6IHRydWUsXG4gIH0pXG4gIHBsYXllclVubXV0ZSgpOiB2b2lkIHt9XG5cbiAgLyoqXG4gICAqIHBsYXllck11dGVcbiAgICpcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBzeW5jOiB0cnVlLFxuICB9KVxuICBwbGF5ZXJNdXRlKCk6IHZvaWQge31cblxuICAvKipcbiAgICogcGxheWVyRXhpdFxuICAgKlxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN5bmM6IHRydWUsXG4gIH0pXG4gIHBsYXllckV4aXQoKTogdm9pZCB7fVxuXG4gIC8qKlxuICAgKiB1cGRhdGVNZXRhZGF0YVxuICAgKlxuICAgKiBAcGFyYW0gYXJ0aXN0IHtzdHJpbmd9XG4gICAqIEBwYXJhbSB0aXRsZSB7c3RyaW5nfVxuICAgKlxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN5bmM6IHRydWUsXG4gIH0pXG4gIHVwZGF0ZU1ldGFkYXRhKGFydGlzdDogc3RyaW5nLCB0aXRsZTogc3RyaW5nKTogdm9pZCB7fVxuXG4gIC8qKlxuICAgKiBjb250cm9sc0Rlc3Ryb3lcbiAgICpcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBzeW5jOiB0cnVlLFxuICB9KVxuICBjb250cm9sc0Rlc3Ryb3koKTogdm9pZCB7fVxuXG4gIC8qKlxuICAgKiBjb250cm9sc1N1YnNjcmliZVxuICAgKlxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN5bmM6IHRydWUsXG4gIH0pXG4gIGNvbnRyb2xzU3Vic2NyaWJlKCk6IHZvaWQge31cblxuICAvKipcbiAgICogY29udHJvbHNDcmVhdGVcbiAgICpcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBzeW5jOiB0cnVlLFxuICB9KVxuICBjb250cm9sc0NyZWF0ZSgpOiB2b2lkIHt9XG59XG4iXX0=
import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var RogerRadioPlayer = /** @class */ (function (_super) {
    __extends(RogerRadioPlayer, _super);
    function RogerRadioPlayer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RogerRadioPlayer.prototype.setCallbackStopped = function (callback) { return cordova(this, "setCallbackStopped", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.setCallbackAlertsEnable = function (callback) { return cordova(this, "setCallbackAlertsEnable", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.setCallbackAlertsDisable = function (callback) { return cordova(this, "setCallbackAlertsDisable", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.playerLoad = function (url) { return cordova(this, "playerLoad", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.playerReload = function () { return cordova(this, "playerReload", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.playerPlay = function () { return cordova(this, "playerPlay", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.playerStop = function () { return cordova(this, "playerStop", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.playerSetVolume = function (vol) { return cordova(this, "playerSetVolume", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.playerUnmute = function () { return cordova(this, "playerUnmute", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.playerMute = function () { return cordova(this, "playerMute", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.playerExit = function () { return cordova(this, "playerExit", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.updateMetadata = function (artist, title) { return cordova(this, "updateMetadata", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.controlsDestroy = function () { return cordova(this, "controlsDestroy", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.controlsSubscribe = function () { return cordova(this, "controlsSubscribe", { "sync": true }, arguments); };
    RogerRadioPlayer.prototype.controlsCreate = function () { return cordova(this, "controlsCreate", { "sync": true }, arguments); };
    RogerRadioPlayer.pluginName = "RogerRadioPlayer";
    RogerRadioPlayer.plugin = "cordova-plugin-roger-radio-player";
    RogerRadioPlayer.pluginRef = "cordova.plugins.rogerRadioPlayer";
    RogerRadioPlayer.repo = "https://github.com/TheHolyRogerCoin/RogerRadioApp";
    RogerRadioPlayer.platforms = ["Android"];
    RogerRadioPlayer.decorators = [
        { type: Injectable }
    ];
    return RogerRadioPlayer;
}(IonicNativePlugin));
export { RogerRadioPlayer };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL3JvZ2VyLXJhZGlvLXBsYXllci9uZ3gvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyw4QkFBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUEwQmxDLG9DQUFpQjs7OztJQVdyRCw2Q0FBa0IsYUFBQyxRQUFrQztJQVlyRCxrREFBdUIsYUFBQyxRQUFrQztJQVkxRCxtREFBd0IsYUFBQyxRQUFrQztJQVkzRCxxQ0FBVSxhQUFDLEdBQVc7SUFVdEIsdUNBQVk7SUFVWixxQ0FBVTtJQVVWLHFDQUFVO0lBWVYsMENBQWUsYUFBQyxHQUFXO0lBVTNCLHVDQUFZO0lBVVoscUNBQVU7SUFVVixxQ0FBVTtJQWFWLHlDQUFjLGFBQUMsTUFBYyxFQUFFLEtBQWE7SUFVNUMsMENBQWU7SUFVZiw0Q0FBaUI7SUFVakIseUNBQWM7Ozs7Ozs7Z0JBbktmLFVBQVU7OzJCQTFCWDtFQTJCc0MsaUJBQWlCO1NBQTFDLGdCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG4vKipcbiAqIEBuYW1lIFJvZ2VyUmFkaW9QbGF5ZXJcbiAqIEBkZXNjcmlwdGlvblxuICogQ29yZG92YSBwbHVnaW4gZm9yIFJvZ2VyUmFkaW8gUGxheWVyLlxuICogUmVxdWlyZXMgQ29yZG92YSBwbHVnaW46IGNvcmRvdmEtcGx1Z2luLXJvZ2VyLXJhZGlvLXBsYXllci5cbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgUm9nZXJSYWRpb1BsYXllciB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvcm9nZXItcmFkaW8tcGxheWVyL25neCc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSByb2dlclJhZGlvUGxheWVyOiBSb2dlclJhZGlvUGxheWVyKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiBgYGBcbiAqXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnUm9nZXJSYWRpb1BsYXllcicsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLXJvZ2VyLXJhZGlvLXBsYXllcicsXG4gIHBsdWdpblJlZjogJ2NvcmRvdmEucGx1Z2lucy5yb2dlclJhZGlvUGxheWVyJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9UaGVIb2x5Um9nZXJDb2luL1JvZ2VyUmFkaW9BcHAnLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCddLFxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBSb2dlclJhZGlvUGxheWVyIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuICAvKipcbiAgICogc2V0Q2FsbGJhY2tTdG9wcGVkXG4gICAqXG4gICAqIEBwYXJhbSBjYWxsYmFjayB7ZnVuY3Rpb259XG4gICAqXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3luYzogdHJ1ZSxcbiAgfSlcbiAgc2V0Q2FsbGJhY2tTdG9wcGVkKGNhbGxiYWNrOiAoLi4uYXJnczogYW55W10pID0+IHZvaWQpOiB2b2lkIHt9XG5cbiAgLyoqXG4gICAqIHNldENhbGxiYWNrQWxlcnRzRW5hYmxlXG4gICAqXG4gICAqIEBwYXJhbSBjYWxsYmFjayB7ZnVuY3Rpb259XG4gICAqXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3luYzogdHJ1ZSxcbiAgfSlcbiAgc2V0Q2FsbGJhY2tBbGVydHNFbmFibGUoY2FsbGJhY2s6ICguLi5hcmdzOiBhbnlbXSkgPT4gdm9pZCk6IHZvaWQge31cblxuICAvKipcbiAgICogc2V0Q2FsbGJhY2tBbGVydHNEaXNhYmxlXG4gICAqXG4gICAqIEBwYXJhbSBjYWxsYmFjayB7ZnVuY3Rpb259XG4gICAqXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3luYzogdHJ1ZSxcbiAgfSlcbiAgc2V0Q2FsbGJhY2tBbGVydHNEaXNhYmxlKGNhbGxiYWNrOiAoLi4uYXJnczogYW55W10pID0+IHZvaWQpOiB2b2lkIHt9XG5cbiAgLyoqXG4gICAqIHBsYXllckxvYWRcbiAgICpcbiAgICogQHBhcmFtIHVybCB7c3RyaW5nfVxuICAgKlxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN5bmM6IHRydWUsXG4gIH0pXG4gIHBsYXllckxvYWQodXJsOiBzdHJpbmcpOiB2b2lkIHt9XG5cbiAgLyoqXG4gICAqIHBsYXllclJlbG9hZFxuICAgKlxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN5bmM6IHRydWUsXG4gIH0pXG4gIHBsYXllclJlbG9hZCgpOiB2b2lkIHt9XG5cbiAgLyoqXG4gICAqIHBsYXllclBsYXlcbiAgICpcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBzeW5jOiB0cnVlLFxuICB9KVxuICBwbGF5ZXJQbGF5KCk6IHZvaWQge31cblxuICAvKipcbiAgICogcGxheWVyU3RvcFxuICAgKlxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN5bmM6IHRydWUsXG4gIH0pXG4gIHBsYXllclN0b3AoKTogdm9pZCB7fVxuXG4gIC8qKlxuICAgKiBwbGF5ZXJTZXRWb2x1bWVcbiAgICpcbiAgICogQHBhcmFtIHZvbCB7bnVtYmVyfVxuICAgKlxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN5bmM6IHRydWUsXG4gIH0pXG4gIHBsYXllclNldFZvbHVtZSh2b2w6IG51bWJlcik6IHZvaWQge31cblxuICAvKipcbiAgICogcGxheWVyVW5tdXRlXG4gICAqXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3luYzogdHJ1ZSxcbiAgfSlcbiAgcGxheWVyVW5tdXRlKCk6IHZvaWQge31cblxuICAvKipcbiAgICogcGxheWVyTXV0ZVxuICAgKlxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN5bmM6IHRydWUsXG4gIH0pXG4gIHBsYXllck11dGUoKTogdm9pZCB7fVxuXG4gIC8qKlxuICAgKiBwbGF5ZXJFeGl0XG4gICAqXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3luYzogdHJ1ZSxcbiAgfSlcbiAgcGxheWVyRXhpdCgpOiB2b2lkIHt9XG5cbiAgLyoqXG4gICAqIHVwZGF0ZU1ldGFkYXRhXG4gICAqXG4gICAqIEBwYXJhbSBhcnRpc3Qge3N0cmluZ31cbiAgICogQHBhcmFtIHRpdGxlIHtzdHJpbmd9XG4gICAqXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3luYzogdHJ1ZSxcbiAgfSlcbiAgdXBkYXRlTWV0YWRhdGEoYXJ0aXN0OiBzdHJpbmcsIHRpdGxlOiBzdHJpbmcpOiB2b2lkIHt9XG5cbiAgLyoqXG4gICAqIGNvbnRyb2xzRGVzdHJveVxuICAgKlxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN5bmM6IHRydWUsXG4gIH0pXG4gIGNvbnRyb2xzRGVzdHJveSgpOiB2b2lkIHt9XG5cbiAgLyoqXG4gICAqIGNvbnRyb2xzU3Vic2NyaWJlXG4gICAqXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3luYzogdHJ1ZSxcbiAgfSlcbiAgY29udHJvbHNTdWJzY3JpYmUoKTogdm9pZCB7fVxuXG4gIC8qKlxuICAgKiBjb250cm9sc0NyZWF0ZVxuICAgKlxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN5bmM6IHRydWUsXG4gIH0pXG4gIGNvbnRyb2xzQ3JlYXRlKCk6IHZvaWQge31cbn1cbiJdfQ==